-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sobel_resize_accel_resizeNNBilinear_Pipeline_VITIS_LOOP_411_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_mat_data_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    in_mat_data_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    in_mat_data_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    in_mat_data_empty_n : IN STD_LOGIC;
    in_mat_data_read : OUT STD_LOGIC;
    out_resize_mat_data_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_resize_mat_data_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    out_resize_mat_data_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    out_resize_mat_data_full_n : IN STD_LOGIC;
    out_resize_mat_data_write : OUT STD_LOGIC;
    indexy : IN STD_LOGIC_VECTOR (16 downto 0);
    nextYScale : IN STD_LOGIC_VECTOR (16 downto 0);
    loop_col_count : IN STD_LOGIC_VECTOR (31 downto 0);
    sub309 : IN STD_LOGIC_VECTOR (31 downto 0);
    sub : IN STD_LOGIC_VECTOR (31 downto 0);
    cmp308 : IN STD_LOGIC_VECTOR (0 downto 0);
    imgOutput_cols_val : IN STD_LOGIC_VECTOR (31 downto 0);
    slt : IN STD_LOGIC_VECTOR (0 downto 0);
    line_buffer_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    line_buffer_ce0 : OUT STD_LOGIC;
    line_buffer_we0 : OUT STD_LOGIC;
    line_buffer_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    line_buffer_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    line_buffer_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    line_buffer_ce1 : OUT STD_LOGIC;
    line_buffer_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    line_buffer_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    line_buffer_1_ce0 : OUT STD_LOGIC;
    line_buffer_1_we0 : OUT STD_LOGIC;
    line_buffer_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    line_buffer_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    line_buffer_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    line_buffer_1_ce1 : OUT STD_LOGIC;
    line_buffer_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    sub97 : IN STD_LOGIC_VECTOR (31 downto 0);
    first_row_index_6 : IN STD_LOGIC_VECTOR (31 downto 0);
    line_buffer_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    line_buffer_2_ce0 : OUT STD_LOGIC;
    line_buffer_2_we0 : OUT STD_LOGIC;
    line_buffer_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    line_buffer_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    line_buffer_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    line_buffer_2_ce1 : OUT STD_LOGIC;
    line_buffer_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    empty_28 : IN STD_LOGIC_VECTOR (47 downto 0);
    shr_i_i_i_i102_cast : IN STD_LOGIC_VECTOR (21 downto 0);
    empty_29 : IN STD_LOGIC_VECTOR (21 downto 0);
    add_i_i_i_i_i475_i : IN STD_LOGIC_VECTOR (16 downto 0);
    tmp_cast_30 : IN STD_LOGIC_VECTOR (16 downto 0);
    empty_31 : IN STD_LOGIC_VECTOR (0 downto 0);
    indexy_pre_1 : IN STD_LOGIC_VECTOR (21 downto 0);
    add_i_i_i_i_i349_i : IN STD_LOGIC_VECTOR (16 downto 0);
    tmp_cast : IN STD_LOGIC_VECTOR (16 downto 0);
    empty_32 : IN STD_LOGIC_VECTOR (0 downto 0);
    empty : IN STD_LOGIC_VECTOR (23 downto 0);
    shl_i_i_i_i_i : IN STD_LOGIC_VECTOR (53 downto 0);
    indexx_pre_1 : IN STD_LOGIC_VECTOR (41 downto 0);
    cmp71 : IN STD_LOGIC_VECTOR (0 downto 0);
    imgInput_cols_val : IN STD_LOGIC_VECTOR (31 downto 0);
    indexy_1_out : OUT STD_LOGIC_VECTOR (16 downto 0);
    indexy_1_out_ap_vld : OUT STD_LOGIC;
    nextYScale_1_out : OUT STD_LOGIC_VECTOR (16 downto 0);
    nextYScale_1_out_ap_vld : OUT STD_LOGIC;
    grp_scaleCompute_17_42_20_48_16_1_s_fu_203_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_scaleCompute_17_42_20_48_16_1_s_fu_203_p_din2 : OUT STD_LOGIC_VECTOR (47 downto 0);
    grp_scaleCompute_17_42_20_48_16_1_s_fu_203_p_dout0 : IN STD_LOGIC_VECTOR (41 downto 0);
    grp_scaleCompute_17_42_20_48_16_1_s_fu_203_p_ce : OUT STD_LOGIC );
end;


architecture behav of sobel_resize_accel_resizeNNBilinear_Pipeline_VITIS_LOOP_411_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv42_0 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal icmp_ln411_reg_1278 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln411_reg_1278_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln428_reg_1324 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln428_reg_1324_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op117_read_state9 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal and_ln509_reg_1303 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_reg_1303_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op240_write_state17 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln411_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal in_mat_data_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal out_resize_mat_data_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln411_reg_1278_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal first_row_index_6_read_reg_1250 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln509_reg_1297 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln509_reg_1297_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln510_reg_1311 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp308_read_reg_1263 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp71_read_read_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_read_fu_238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal slt_read_read_fu_286_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_reg_1272 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_1_reg_1272_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal j_1_reg_1272_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal j_1_reg_1272_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal j_1_reg_1272_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal j_1_reg_1272_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal j_1_reg_1272_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal j_1_reg_1272_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal j_1_reg_1272_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln411_reg_1278_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln411_reg_1278_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln411_reg_1278_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln411_reg_1278_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln411_reg_1278_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln411_reg_1278_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln411_reg_1278_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln411_reg_1278_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln411_reg_1278_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln411_reg_1278_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln411_reg_1278_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln411_reg_1278_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln243_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln243_reg_1282 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln251_fu_695_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln251_reg_1287 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln251_reg_1287_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln251_reg_1287_pp0_iter2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln251_reg_1287_pp0_iter3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln251_reg_1287_pp0_iter4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln251_reg_1287_pp0_iter5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln251_reg_1287_pp0_iter6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln251_reg_1287_pp0_iter7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln251_reg_1287_pp0_iter8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln251_reg_1287_pp0_iter9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln251_reg_1287_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln430_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln430_reg_1292 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln509_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln509_reg_1297_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln509_reg_1297_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln509_reg_1297_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln509_reg_1297_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln509_reg_1297_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln509_reg_1297_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln509_reg_1297_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln509_reg_1297_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln509_reg_1297_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_fu_715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_reg_1303_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_reg_1303_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_reg_1303_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_reg_1303_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_reg_1303_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_reg_1303_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_reg_1303_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_reg_1303_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_reg_1303_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_reg_1303_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_reg_1303_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_reg_1303_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_reg_1303_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln509_reg_1303_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_fu_721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln511_reg_1307_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln510_fu_727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln510_reg_1311_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln510_reg_1311_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln510_reg_1311_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln510_reg_1311_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln510_reg_1311_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln510_reg_1311_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln510_reg_1311_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_fu_733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln508_reg_1315_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln417_fu_752_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln428_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln428_reg_1324_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln428_reg_1324_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln428_reg_1324_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln428_reg_1324_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln428_reg_1324_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indexx_pre_comp_reg_1328 : STD_LOGIC_VECTOR (41 downto 0);
    signal icmp_ln263_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln263_reg_1334 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_2_fu_864_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal idx_2_reg_1339 : STD_LOGIC_VECTOR (16 downto 0);
    signal not_cmp_i_i176_fu_898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_cmp_i_i176_reg_1350 : STD_LOGIC_VECTOR (0 downto 0);
    signal Wx_reg_1355 : STD_LOGIC_VECTOR (11 downto 0);
    signal Wx_reg_1355_pp0_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal Wx_reg_1355_pp0_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal Wx_reg_1355_pp0_iter11_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_1_addr_gep_fu_431_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buffer_1_addr_1_gep_fu_450_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buffer_addr_gep_fu_468_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buffer_2_addr_gep_fu_475_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buffer_addr_1_gep_fu_483_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal line_buffer_2_addr_1_gep_fu_490_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal Wy_reg_1421 : STD_LOGIC_VECTOR (11 downto 0);
    signal A0_fu_975_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_reg_1432 : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_reg_1432_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_reg_1432_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal A0_reg_1432_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal val0_fu_1025_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal val0_reg_1437 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln53_fu_1031_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln53_reg_1442 : STD_LOGIC_VECTOR (8 downto 0);
    signal P2_fu_1082_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal P2_reg_1462 : STD_LOGIC_VECTOR (20 downto 0);
    signal add_ln61_2_fu_1108_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln61_2_reg_1477 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln1_reg_1482 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln61_fu_1128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln61_reg_1489 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_scaleCompute_17_42_20_48_16_1_s_fu_585_ap_ce : STD_LOGIC;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call6 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16_ignore_call6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp85 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_read_pixel_reg_508 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_read_pixel_reg_508 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_read_pixel_reg_508 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_read_pixel_reg_508 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_read_pixel_reg_508 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter5_read_pixel_reg_508 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter6_read_pixel_reg_508 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter7_read_pixel_reg_508 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter8_read_pixel_reg_508 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter9_read_pixel_reg_508 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_flag_write_phi_fu_530_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_flag_write_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_flag_write_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter2_flag_write_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter3_flag_write_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter4_flag_write_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter5_flag_write_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter6_flag_write_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter7_flag_write_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter8_flag_write_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter9_flag_write_reg_525 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_B1_reg_541 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_B1_reg_541 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_B1_reg_541 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_B1_reg_541 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_B1_reg_541 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter5_B1_reg_541 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter6_B1_reg_541 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter7_B1_reg_541 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter8_B1_reg_541 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter9_B1_reg_541 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter10_B1_reg_541 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter11_B1_reg_541 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_predicate_pred260_state11 : BOOLEAN;
    signal ap_predicate_pred289_state11 : BOOLEAN;
    signal ap_predicate_pred243_state11 : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_B0_reg_552 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_B0_reg_552 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_B0_reg_552 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_B0_reg_552 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_B0_reg_552 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter5_B0_reg_552 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter6_B0_reg_552 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter7_B0_reg_552 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter8_B0_reg_552 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter9_B0_reg_552 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter10_B0_reg_552 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter11_B0_reg_552 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0_0_066256_reg_563 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0_0_066256_reg_563 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_p_0_0_066256_reg_563 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_p_0_0_066256_reg_563 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_p_0_0_066256_reg_563 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter5_p_0_0_066256_reg_563 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter6_p_0_0_066256_reg_563 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter7_p_0_0_066256_reg_563 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter8_p_0_0_066256_reg_563 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter9_p_0_0_066256_reg_563 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter10_p_0_0_066256_reg_563 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter11_p_0_0_066256_reg_563 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_67_reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_67_reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_67_reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_empty_67_reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter4_empty_67_reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter5_empty_67_reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter6_empty_67_reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter7_empty_67_reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter8_empty_67_reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter9_empty_67_reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter10_empty_67_reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter11_empty_67_reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln452_fu_931_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln453_fu_940_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln411_fu_913_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_predicate_pred839_state10 : BOOLEAN;
    signal ap_predicate_pred851_state10 : BOOLEAN;
    signal ap_predicate_pred855_state10 : BOOLEAN;
    signal nextYScale_1_fu_172 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    signal nextYScale_2_fu_762_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal indexy_1_fu_176 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    signal indexy_2_fu_687_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal j_fu_180 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal add_ln411_fu_655_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_j_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_read_fu_214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_predicate_pred914_state10 : BOOLEAN;
    signal ap_predicate_pred926_state10 : BOOLEAN;
    signal ap_predicate_pred939_state10 : BOOLEAN;
    signal ap_predicate_pred949_state10 : BOOLEAN;
    signal ap_predicate_pred959_state10 : BOOLEAN;
    signal ap_predicate_pred970_state10 : BOOLEAN;
    signal zext_ln411_1_fu_645_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln243_fu_661_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal icmp_ln249_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln249_fu_679_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln509_fu_705_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln417_fu_749_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln243_fu_757_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln428_fu_768_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln428_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln428_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln263_fu_793_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_7_fu_802_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal indexx_pre_2_fu_809_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal indexx_pre_3_fu_814_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal trunc_ln266_fu_840_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln_fu_822_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln266_fu_844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln266_fu_850_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_8_fu_832_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln266_fu_856_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln268_fu_872_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln267_fu_884_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1_fu_876_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal idx_fu_894_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln267_fu_888_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_68_fu_919_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln450_fu_922_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal idx_nxt_fu_925_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln_fu_950_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln250_fu_957_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln52_1_fu_993_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln52_fu_989_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal A1_fu_982_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln52_3_fu_1007_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln52_2_fu_1003_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln52_fu_997_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln52_1_fu_1011_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln52_4_fu_1017_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln52_5_fu_1021_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln54_fu_1037_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal conv10_i_i_i_fu_1053_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv10_i_i_i_fu_1053_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv10_i_i_i_fu_1053_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal Wxy_fu_1059_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal P2_fu_1082_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1168_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1177_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal P4_fu_1094_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln61_3_fu_1101_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln61_fu_1104_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln61_fu_1124_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln61_3_fu_1141_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_1134_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln61_fu_1146_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1168_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1177_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1168_ce : STD_LOGIC;
    signal grp_fu_1177_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter12_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter13_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter14_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter15_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal P2_fu_1082_p00 : STD_LOGIC_VECTOR (20 downto 0);
    signal conv10_i_i_i_fu_1053_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal conv10_i_i_i_fu_1053_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1168_p00 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_1177_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_condition_710 : BOOLEAN;
    signal ap_condition_755 : BOOLEAN;
    signal ap_condition_714 : BOOLEAN;
    signal ap_condition_91 : BOOLEAN;
    signal ap_condition_861 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component sobel_resize_accel_scaleCompute_17_42_20_48_16_1_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        currindex : IN STD_LOGIC_VECTOR (31 downto 0);
        inscale : IN STD_LOGIC_VECTOR (47 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (41 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component sobel_resize_accel_mul_12ns_12ns_24_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component sobel_resize_accel_mul_12ns_9s_21_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component sobel_resize_accel_mac_muladd_12ns_9s_21s_22_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component sobel_resize_accel_mac_muladd_12ns_10s_22s_23_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component sobel_resize_accel_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_12ns_12ns_24_1_1_U79 : component sobel_resize_accel_mul_12ns_12ns_24_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 24)
    port map (
        din0 => conv10_i_i_i_fu_1053_p0,
        din1 => conv10_i_i_i_fu_1053_p1,
        dout => conv10_i_i_i_fu_1053_p2);

    mul_12ns_9s_21_1_1_U80 : component sobel_resize_accel_mul_12ns_9s_21_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        din0 => P2_fu_1082_p0,
        din1 => sub_ln53_reg_1442,
        dout => P2_fu_1082_p2);

    mac_muladd_12ns_9s_21s_22_4_1_U81 : component sobel_resize_accel_mac_muladd_12ns_9s_21s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1168_p0,
        din1 => sub_ln54_fu_1037_p2,
        din2 => P2_reg_1462,
        ce => grp_fu_1168_ce,
        dout => grp_fu_1168_p3);

    mac_muladd_12ns_10s_22s_23_4_1_U82 : component sobel_resize_accel_mac_muladd_12ns_10s_22s_23_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1177_p0,
        din1 => val0_reg_1437,
        din2 => grp_fu_1168_p3,
        ce => grp_fu_1177_ce,
        dout => grp_fu_1177_p3);

    flow_control_loop_pipe_sequential_init_U : component sobel_resize_accel_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter15_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter11_B0_reg_552_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
                if ((ap_predicate_pred243_state11 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_B0_reg_552 <= line_buffer_2_q1;
                elsif ((ap_predicate_pred289_state11 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_B0_reg_552 <= line_buffer_q1;
                elsif ((ap_predicate_pred260_state11 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_B0_reg_552 <= line_buffer_1_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_B0_reg_552 <= ap_phi_reg_pp0_iter10_B0_reg_552;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter11_B1_reg_541_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
                if ((ap_predicate_pred243_state11 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_B1_reg_541 <= line_buffer_2_q0;
                elsif ((ap_predicate_pred289_state11 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_B1_reg_541 <= line_buffer_q0;
                elsif ((ap_predicate_pred260_state11 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_B1_reg_541 <= line_buffer_1_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_B1_reg_541 <= ap_phi_reg_pp0_iter10_B1_reg_541;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter11_empty_67_reg_574_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
                if ((ap_predicate_pred243_state11 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_empty_67_reg_574 <= line_buffer_1_q1;
                elsif ((ap_predicate_pred289_state11 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_empty_67_reg_574 <= line_buffer_2_q1;
                elsif ((ap_predicate_pred260_state11 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_empty_67_reg_574 <= line_buffer_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_empty_67_reg_574 <= ap_phi_reg_pp0_iter10_empty_67_reg_574;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter11_p_0_0_066256_reg_563_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
                if ((ap_predicate_pred243_state11 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_p_0_0_066256_reg_563 <= line_buffer_1_q0;
                elsif ((ap_predicate_pred289_state11 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_p_0_0_066256_reg_563 <= line_buffer_2_q0;
                elsif ((ap_predicate_pred260_state11 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_p_0_0_066256_reg_563 <= line_buffer_q0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter11_p_0_0_066256_reg_563 <= ap_phi_reg_pp0_iter10_p_0_0_066256_reg_563;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_flag_write_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_710)) then
                if (((cmp71_read_read_fu_190_p2 = ap_const_lv1_0) and (icmp_ln411_fu_649_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_flag_write_reg_525 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_flag_write_reg_525 <= ap_phi_reg_pp0_iter0_flag_write_reg_525;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_flag_write_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_714)) then
                if ((ap_const_boolean_1 = ap_condition_755)) then 
                    ap_phi_reg_pp0_iter2_flag_write_reg_525 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_flag_write_reg_525 <= ap_phi_reg_pp0_iter1_flag_write_reg_525;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter9_flag_write_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then
                if ((ap_const_boolean_1 = ap_condition_91)) then 
                    ap_phi_reg_pp0_iter9_flag_write_reg_525 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter9_flag_write_reg_525 <= ap_phi_reg_pp0_iter8_flag_write_reg_525;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter9_read_pixel_reg_508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then
                if ((ap_const_boolean_1 = ap_condition_91)) then 
                    ap_phi_reg_pp0_iter9_read_pixel_reg_508 <= in_mat_data_dout;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter9_read_pixel_reg_508 <= ap_phi_reg_pp0_iter8_read_pixel_reg_508;
                end if;
            end if; 
        end if;
    end process;

    indexy_1_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln411_fu_649_p2 = ap_const_lv1_1))) then 
                    indexy_1_fu_176 <= indexy_2_fu_687_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indexy_1_fu_176 <= indexy;
                end if;
            end if; 
        end if;
    end process;

    j_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln411_fu_649_p2 = ap_const_lv1_1))) then 
                    j_fu_180 <= add_ln411_fu_655_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_180 <= ap_const_lv8_0;
                end if;
            end if; 
        end if;
    end process;

    nextYScale_1_fu_172_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    nextYScale_1_fu_172 <= nextYScale;
                elsif ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then 
                    nextYScale_1_fu_172 <= nextYScale_2_fu_762_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                A0_reg_1432 <= A0_fu_975_p3;
                A0_reg_1432_pp0_iter12_reg <= A0_reg_1432;
                A0_reg_1432_pp0_iter13_reg <= A0_reg_1432_pp0_iter12_reg;
                A0_reg_1432_pp0_iter14_reg <= A0_reg_1432_pp0_iter13_reg;
                P2_reg_1462 <= P2_fu_1082_p2;
                Wx_reg_1355 <= sub_ln267_fu_888_p2(23 downto 12);
                Wx_reg_1355_pp0_iter10_reg <= Wx_reg_1355_pp0_iter9_reg;
                Wx_reg_1355_pp0_iter11_reg <= Wx_reg_1355_pp0_iter10_reg;
                Wx_reg_1355_pp0_iter9_reg <= Wx_reg_1355;
                Wy_reg_1421 <= sub_ln250_fu_957_p2(23 downto 12);
                add_ln61_2_reg_1477 <= add_ln61_2_fu_1108_p2;
                and_ln428_reg_1324_pp0_iter2_reg <= and_ln428_reg_1324;
                and_ln428_reg_1324_pp0_iter3_reg <= and_ln428_reg_1324_pp0_iter2_reg;
                and_ln428_reg_1324_pp0_iter4_reg <= and_ln428_reg_1324_pp0_iter3_reg;
                and_ln428_reg_1324_pp0_iter5_reg <= and_ln428_reg_1324_pp0_iter4_reg;
                and_ln428_reg_1324_pp0_iter6_reg <= and_ln428_reg_1324_pp0_iter5_reg;
                and_ln428_reg_1324_pp0_iter7_reg <= and_ln428_reg_1324_pp0_iter6_reg;
                and_ln508_reg_1315_pp0_iter10_reg <= and_ln508_reg_1315_pp0_iter9_reg;
                and_ln508_reg_1315_pp0_iter11_reg <= and_ln508_reg_1315_pp0_iter10_reg;
                and_ln508_reg_1315_pp0_iter12_reg <= and_ln508_reg_1315_pp0_iter11_reg;
                and_ln508_reg_1315_pp0_iter13_reg <= and_ln508_reg_1315_pp0_iter12_reg;
                and_ln508_reg_1315_pp0_iter14_reg <= and_ln508_reg_1315_pp0_iter13_reg;
                and_ln508_reg_1315_pp0_iter15_reg <= and_ln508_reg_1315_pp0_iter14_reg;
                and_ln508_reg_1315_pp0_iter2_reg <= and_ln508_reg_1315_pp0_iter1_reg;
                and_ln508_reg_1315_pp0_iter3_reg <= and_ln508_reg_1315_pp0_iter2_reg;
                and_ln508_reg_1315_pp0_iter4_reg <= and_ln508_reg_1315_pp0_iter3_reg;
                and_ln508_reg_1315_pp0_iter5_reg <= and_ln508_reg_1315_pp0_iter4_reg;
                and_ln508_reg_1315_pp0_iter6_reg <= and_ln508_reg_1315_pp0_iter5_reg;
                and_ln508_reg_1315_pp0_iter7_reg <= and_ln508_reg_1315_pp0_iter6_reg;
                and_ln508_reg_1315_pp0_iter8_reg <= and_ln508_reg_1315_pp0_iter7_reg;
                and_ln508_reg_1315_pp0_iter9_reg <= and_ln508_reg_1315_pp0_iter8_reg;
                and_ln509_reg_1303_pp0_iter10_reg <= and_ln509_reg_1303_pp0_iter9_reg;
                and_ln509_reg_1303_pp0_iter11_reg <= and_ln509_reg_1303_pp0_iter10_reg;
                and_ln509_reg_1303_pp0_iter12_reg <= and_ln509_reg_1303_pp0_iter11_reg;
                and_ln509_reg_1303_pp0_iter13_reg <= and_ln509_reg_1303_pp0_iter12_reg;
                and_ln509_reg_1303_pp0_iter14_reg <= and_ln509_reg_1303_pp0_iter13_reg;
                and_ln509_reg_1303_pp0_iter15_reg <= and_ln509_reg_1303_pp0_iter14_reg;
                and_ln509_reg_1303_pp0_iter2_reg <= and_ln509_reg_1303_pp0_iter1_reg;
                and_ln509_reg_1303_pp0_iter3_reg <= and_ln509_reg_1303_pp0_iter2_reg;
                and_ln509_reg_1303_pp0_iter4_reg <= and_ln509_reg_1303_pp0_iter3_reg;
                and_ln509_reg_1303_pp0_iter5_reg <= and_ln509_reg_1303_pp0_iter4_reg;
                and_ln509_reg_1303_pp0_iter6_reg <= and_ln509_reg_1303_pp0_iter5_reg;
                and_ln509_reg_1303_pp0_iter7_reg <= and_ln509_reg_1303_pp0_iter6_reg;
                and_ln509_reg_1303_pp0_iter8_reg <= and_ln509_reg_1303_pp0_iter7_reg;
                and_ln509_reg_1303_pp0_iter9_reg <= and_ln509_reg_1303_pp0_iter8_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
                ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
                ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
                ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                    ap_predicate_pred243_state11 <= ((first_row_index_6_read_reg_1250 = ap_const_lv32_1) and (icmp_ln411_reg_1278_pp0_iter8_reg = ap_const_lv1_1));
                    ap_predicate_pred260_state11 <= ((first_row_index_6_read_reg_1250 = ap_const_lv32_0) and (icmp_ln411_reg_1278_pp0_iter8_reg = ap_const_lv1_1));
                    ap_predicate_pred289_state11 <= (not((first_row_index_6_read_reg_1250 = ap_const_lv32_0)) and not((first_row_index_6_read_reg_1250 = ap_const_lv32_1)) and (icmp_ln411_reg_1278_pp0_iter8_reg = ap_const_lv1_1));
                    ap_predicate_pred839_state10 <= ((icmp_ln411_reg_1278_pp0_iter7_reg = ap_const_lv1_1) and (first_row_index_6_read_reg_1250 = ap_const_lv32_0));
                    ap_predicate_pred851_state10 <= (not((first_row_index_6_read_reg_1250 = ap_const_lv32_0)) and not((first_row_index_6_read_reg_1250 = ap_const_lv32_1)) and (icmp_ln411_reg_1278_pp0_iter7_reg = ap_const_lv1_1));
                    ap_predicate_pred855_state10 <= (not((first_row_index_6_read_reg_1250 = ap_const_lv32_0)) and not((first_row_index_6_read_reg_1250 = ap_const_lv32_1)) and (icmp_ln411_reg_1278_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln509_reg_1297_pp0_iter7_reg = ap_const_lv1_0));
                    ap_predicate_pred914_state10 <= ((icmp_ln411_reg_1278_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln510_reg_1311_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln511_reg_1307_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln509_reg_1297_pp0_iter7_reg = ap_const_lv1_0) and (first_row_index_6_read_reg_1250 = ap_const_lv32_1) and (slt = ap_const_lv1_0));
                    ap_predicate_pred926_state10 <= (((icmp_ln411_reg_1278_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln511_reg_1307_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln509_reg_1297_pp0_iter7_reg = ap_const_lv1_1) and (cmp308_read_reg_1263 = ap_const_lv1_1) and (first_row_index_6_read_reg_1250 = ap_const_lv32_0) and (slt = ap_const_lv1_0)) or ((icmp_ln411_reg_1278_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln510_reg_1311_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln511_reg_1307_pp0_iter7_reg = ap_const_lv1_1) and (first_row_index_6_read_reg_1250 = ap_const_lv32_0) and (slt = ap_const_lv1_0)));
                    ap_predicate_pred939_state10 <= (((icmp_ln411_reg_1278_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln511_reg_1307_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln509_reg_1297_pp0_iter7_reg = ap_const_lv1_1) and (cmp308_read_reg_1263 = ap_const_lv1_1) and (first_row_index_6_read_reg_1250 = ap_const_lv32_1) and (slt = ap_const_lv1_0)) or ((icmp_ln411_reg_1278_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln510_reg_1311_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln511_reg_1307_pp0_iter7_reg = ap_const_lv1_1) and (first_row_index_6_read_reg_1250 = ap_const_lv32_1) and (slt = ap_const_lv1_0)));
                    ap_predicate_pred949_state10 <= (not((first_row_index_6_read_reg_1250 = ap_const_lv32_0)) and not((first_row_index_6_read_reg_1250 = ap_const_lv32_1)) and (icmp_ln411_reg_1278_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln510_reg_1311_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln511_reg_1307_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln509_reg_1297_pp0_iter7_reg = ap_const_lv1_0) and (slt = ap_const_lv1_0));
                    ap_predicate_pred959_state10 <= ((icmp_ln411_reg_1278_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln510_reg_1311_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln511_reg_1307_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln509_reg_1297_pp0_iter7_reg = ap_const_lv1_0) and (first_row_index_6_read_reg_1250 = ap_const_lv32_0) and (slt = ap_const_lv1_0));
                    ap_predicate_pred970_state10 <= ((not((first_row_index_6_read_reg_1250 = ap_const_lv32_0)) and not((first_row_index_6_read_reg_1250 = ap_const_lv32_1)) and (icmp_ln411_reg_1278_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln511_reg_1307_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln509_reg_1297_pp0_iter7_reg = ap_const_lv1_1) and (cmp308_read_reg_1263 = ap_const_lv1_1) and (slt = ap_const_lv1_0)) or (not((first_row_index_6_read_reg_1250 = ap_const_lv32_0)) and not((first_row_index_6_read_reg_1250 = ap_const_lv32_1)) and (icmp_ln411_reg_1278_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln510_reg_1311_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln511_reg_1307_pp0_iter7_reg = ap_const_lv1_1) and (slt = ap_const_lv1_0)));
                icmp_ln263_reg_1334 <= icmp_ln263_fu_797_p2;
                icmp_ln411_reg_1278_pp0_iter10_reg <= icmp_ln411_reg_1278_pp0_iter9_reg;
                icmp_ln411_reg_1278_pp0_iter11_reg <= icmp_ln411_reg_1278_pp0_iter10_reg;
                icmp_ln411_reg_1278_pp0_iter12_reg <= icmp_ln411_reg_1278_pp0_iter11_reg;
                icmp_ln411_reg_1278_pp0_iter13_reg <= icmp_ln411_reg_1278_pp0_iter12_reg;
                icmp_ln411_reg_1278_pp0_iter14_reg <= icmp_ln411_reg_1278_pp0_iter13_reg;
                icmp_ln411_reg_1278_pp0_iter2_reg <= icmp_ln411_reg_1278_pp0_iter1_reg;
                icmp_ln411_reg_1278_pp0_iter3_reg <= icmp_ln411_reg_1278_pp0_iter2_reg;
                icmp_ln411_reg_1278_pp0_iter4_reg <= icmp_ln411_reg_1278_pp0_iter3_reg;
                icmp_ln411_reg_1278_pp0_iter5_reg <= icmp_ln411_reg_1278_pp0_iter4_reg;
                icmp_ln411_reg_1278_pp0_iter6_reg <= icmp_ln411_reg_1278_pp0_iter5_reg;
                icmp_ln411_reg_1278_pp0_iter7_reg <= icmp_ln411_reg_1278_pp0_iter6_reg;
                icmp_ln411_reg_1278_pp0_iter8_reg <= icmp_ln411_reg_1278_pp0_iter7_reg;
                icmp_ln411_reg_1278_pp0_iter9_reg <= icmp_ln411_reg_1278_pp0_iter8_reg;
                icmp_ln509_reg_1297_pp0_iter10_reg <= icmp_ln509_reg_1297_pp0_iter9_reg;
                icmp_ln509_reg_1297_pp0_iter2_reg <= icmp_ln509_reg_1297_pp0_iter1_reg;
                icmp_ln509_reg_1297_pp0_iter3_reg <= icmp_ln509_reg_1297_pp0_iter2_reg;
                icmp_ln509_reg_1297_pp0_iter4_reg <= icmp_ln509_reg_1297_pp0_iter3_reg;
                icmp_ln509_reg_1297_pp0_iter5_reg <= icmp_ln509_reg_1297_pp0_iter4_reg;
                icmp_ln509_reg_1297_pp0_iter6_reg <= icmp_ln509_reg_1297_pp0_iter5_reg;
                icmp_ln509_reg_1297_pp0_iter7_reg <= icmp_ln509_reg_1297_pp0_iter6_reg;
                icmp_ln509_reg_1297_pp0_iter8_reg <= icmp_ln509_reg_1297_pp0_iter7_reg;
                icmp_ln509_reg_1297_pp0_iter9_reg <= icmp_ln509_reg_1297_pp0_iter8_reg;
                icmp_ln510_reg_1311_pp0_iter2_reg <= icmp_ln510_reg_1311_pp0_iter1_reg;
                icmp_ln510_reg_1311_pp0_iter3_reg <= icmp_ln510_reg_1311_pp0_iter2_reg;
                icmp_ln510_reg_1311_pp0_iter4_reg <= icmp_ln510_reg_1311_pp0_iter3_reg;
                icmp_ln510_reg_1311_pp0_iter5_reg <= icmp_ln510_reg_1311_pp0_iter4_reg;
                icmp_ln510_reg_1311_pp0_iter6_reg <= icmp_ln510_reg_1311_pp0_iter5_reg;
                icmp_ln510_reg_1311_pp0_iter7_reg <= icmp_ln510_reg_1311_pp0_iter6_reg;
                icmp_ln511_reg_1307_pp0_iter10_reg <= icmp_ln511_reg_1307_pp0_iter9_reg;
                icmp_ln511_reg_1307_pp0_iter11_reg <= icmp_ln511_reg_1307_pp0_iter10_reg;
                icmp_ln511_reg_1307_pp0_iter12_reg <= icmp_ln511_reg_1307_pp0_iter11_reg;
                icmp_ln511_reg_1307_pp0_iter13_reg <= icmp_ln511_reg_1307_pp0_iter12_reg;
                icmp_ln511_reg_1307_pp0_iter14_reg <= icmp_ln511_reg_1307_pp0_iter13_reg;
                icmp_ln511_reg_1307_pp0_iter15_reg <= icmp_ln511_reg_1307_pp0_iter14_reg;
                icmp_ln511_reg_1307_pp0_iter2_reg <= icmp_ln511_reg_1307_pp0_iter1_reg;
                icmp_ln511_reg_1307_pp0_iter3_reg <= icmp_ln511_reg_1307_pp0_iter2_reg;
                icmp_ln511_reg_1307_pp0_iter4_reg <= icmp_ln511_reg_1307_pp0_iter3_reg;
                icmp_ln511_reg_1307_pp0_iter5_reg <= icmp_ln511_reg_1307_pp0_iter4_reg;
                icmp_ln511_reg_1307_pp0_iter6_reg <= icmp_ln511_reg_1307_pp0_iter5_reg;
                icmp_ln511_reg_1307_pp0_iter7_reg <= icmp_ln511_reg_1307_pp0_iter6_reg;
                icmp_ln511_reg_1307_pp0_iter8_reg <= icmp_ln511_reg_1307_pp0_iter7_reg;
                icmp_ln511_reg_1307_pp0_iter9_reg <= icmp_ln511_reg_1307_pp0_iter8_reg;
                icmp_ln61_reg_1489 <= icmp_ln61_fu_1128_p2;
                idx_2_reg_1339 <= idx_2_fu_864_p3;
                indexx_pre_comp_reg_1328 <= grp_scaleCompute_17_42_20_48_16_1_s_fu_203_p_dout0;
                j_1_reg_1272_pp0_iter2_reg <= j_1_reg_1272_pp0_iter1_reg;
                j_1_reg_1272_pp0_iter3_reg <= j_1_reg_1272_pp0_iter2_reg;
                j_1_reg_1272_pp0_iter4_reg <= j_1_reg_1272_pp0_iter3_reg;
                j_1_reg_1272_pp0_iter5_reg <= j_1_reg_1272_pp0_iter4_reg;
                j_1_reg_1272_pp0_iter6_reg <= j_1_reg_1272_pp0_iter5_reg;
                j_1_reg_1272_pp0_iter7_reg <= j_1_reg_1272_pp0_iter6_reg;
                j_1_reg_1272_pp0_iter8_reg <= j_1_reg_1272_pp0_iter7_reg;
                not_cmp_i_i176_reg_1350 <= not_cmp_i_i176_fu_898_p2;
                sub_ln53_reg_1442 <= sub_ln53_fu_1031_p2;
                trunc_ln1_reg_1482 <= add_ln61_2_fu_1108_p2(17 downto 10);
                trunc_ln251_reg_1287_pp0_iter10_reg <= trunc_ln251_reg_1287_pp0_iter9_reg;
                trunc_ln251_reg_1287_pp0_iter2_reg <= trunc_ln251_reg_1287_pp0_iter1_reg;
                trunc_ln251_reg_1287_pp0_iter3_reg <= trunc_ln251_reg_1287_pp0_iter2_reg;
                trunc_ln251_reg_1287_pp0_iter4_reg <= trunc_ln251_reg_1287_pp0_iter3_reg;
                trunc_ln251_reg_1287_pp0_iter5_reg <= trunc_ln251_reg_1287_pp0_iter4_reg;
                trunc_ln251_reg_1287_pp0_iter6_reg <= trunc_ln251_reg_1287_pp0_iter5_reg;
                trunc_ln251_reg_1287_pp0_iter7_reg <= trunc_ln251_reg_1287_pp0_iter6_reg;
                trunc_ln251_reg_1287_pp0_iter8_reg <= trunc_ln251_reg_1287_pp0_iter7_reg;
                trunc_ln251_reg_1287_pp0_iter9_reg <= trunc_ln251_reg_1287_pp0_iter8_reg;
                val0_reg_1437 <= val0_fu_1025_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                and_ln428_reg_1324 <= and_ln428_fu_783_p2;
                and_ln508_reg_1315 <= and_ln508_fu_733_p2;
                and_ln508_reg_1315_pp0_iter1_reg <= and_ln508_reg_1315;
                and_ln509_reg_1303 <= and_ln509_fu_715_p2;
                and_ln509_reg_1303_pp0_iter1_reg <= and_ln509_reg_1303;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln243_reg_1282 <= icmp_ln243_fu_667_p2;
                icmp_ln411_reg_1278 <= icmp_ln411_fu_649_p2;
                icmp_ln411_reg_1278_pp0_iter1_reg <= icmp_ln411_reg_1278;
                icmp_ln430_reg_1292 <= icmp_ln430_fu_699_p2;
                icmp_ln509_reg_1297 <= icmp_ln509_fu_709_p2;
                icmp_ln509_reg_1297_pp0_iter1_reg <= icmp_ln509_reg_1297;
                icmp_ln510_reg_1311 <= icmp_ln510_fu_727_p2;
                icmp_ln510_reg_1311_pp0_iter1_reg <= icmp_ln510_reg_1311;
                icmp_ln511_reg_1307 <= icmp_ln511_fu_721_p2;
                icmp_ln511_reg_1307_pp0_iter1_reg <= icmp_ln511_reg_1307;
                j_1_reg_1272 <= ap_sig_allocacmp_j_1;
                j_1_reg_1272_pp0_iter1_reg <= j_1_reg_1272;
                trunc_ln251_reg_1287 <= trunc_ln251_fu_695_p1;
                trunc_ln251_reg_1287_pp0_iter1_reg <= trunc_ln251_reg_1287;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter10_B0_reg_552 <= ap_phi_reg_pp0_iter9_B0_reg_552;
                ap_phi_reg_pp0_iter10_B1_reg_541 <= ap_phi_reg_pp0_iter9_B1_reg_541;
                ap_phi_reg_pp0_iter10_empty_67_reg_574 <= ap_phi_reg_pp0_iter9_empty_67_reg_574;
                ap_phi_reg_pp0_iter10_p_0_0_066256_reg_563 <= ap_phi_reg_pp0_iter9_p_0_0_066256_reg_563;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_B0_reg_552 <= ap_phi_reg_pp0_iter0_B0_reg_552;
                ap_phi_reg_pp0_iter1_B1_reg_541 <= ap_phi_reg_pp0_iter0_B1_reg_541;
                ap_phi_reg_pp0_iter1_empty_67_reg_574 <= ap_phi_reg_pp0_iter0_empty_67_reg_574;
                ap_phi_reg_pp0_iter1_p_0_0_066256_reg_563 <= ap_phi_reg_pp0_iter0_p_0_0_066256_reg_563;
                ap_phi_reg_pp0_iter1_read_pixel_reg_508 <= ap_phi_reg_pp0_iter0_read_pixel_reg_508;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_B0_reg_552 <= ap_phi_reg_pp0_iter1_B0_reg_552;
                ap_phi_reg_pp0_iter2_B1_reg_541 <= ap_phi_reg_pp0_iter1_B1_reg_541;
                ap_phi_reg_pp0_iter2_empty_67_reg_574 <= ap_phi_reg_pp0_iter1_empty_67_reg_574;
                ap_phi_reg_pp0_iter2_p_0_0_066256_reg_563 <= ap_phi_reg_pp0_iter1_p_0_0_066256_reg_563;
                ap_phi_reg_pp0_iter2_read_pixel_reg_508 <= ap_phi_reg_pp0_iter1_read_pixel_reg_508;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter3_B0_reg_552 <= ap_phi_reg_pp0_iter2_B0_reg_552;
                ap_phi_reg_pp0_iter3_B1_reg_541 <= ap_phi_reg_pp0_iter2_B1_reg_541;
                ap_phi_reg_pp0_iter3_empty_67_reg_574 <= ap_phi_reg_pp0_iter2_empty_67_reg_574;
                ap_phi_reg_pp0_iter3_flag_write_reg_525 <= ap_phi_reg_pp0_iter2_flag_write_reg_525;
                ap_phi_reg_pp0_iter3_p_0_0_066256_reg_563 <= ap_phi_reg_pp0_iter2_p_0_0_066256_reg_563;
                ap_phi_reg_pp0_iter3_read_pixel_reg_508 <= ap_phi_reg_pp0_iter2_read_pixel_reg_508;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter4_B0_reg_552 <= ap_phi_reg_pp0_iter3_B0_reg_552;
                ap_phi_reg_pp0_iter4_B1_reg_541 <= ap_phi_reg_pp0_iter3_B1_reg_541;
                ap_phi_reg_pp0_iter4_empty_67_reg_574 <= ap_phi_reg_pp0_iter3_empty_67_reg_574;
                ap_phi_reg_pp0_iter4_flag_write_reg_525 <= ap_phi_reg_pp0_iter3_flag_write_reg_525;
                ap_phi_reg_pp0_iter4_p_0_0_066256_reg_563 <= ap_phi_reg_pp0_iter3_p_0_0_066256_reg_563;
                ap_phi_reg_pp0_iter4_read_pixel_reg_508 <= ap_phi_reg_pp0_iter3_read_pixel_reg_508;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter5_B0_reg_552 <= ap_phi_reg_pp0_iter4_B0_reg_552;
                ap_phi_reg_pp0_iter5_B1_reg_541 <= ap_phi_reg_pp0_iter4_B1_reg_541;
                ap_phi_reg_pp0_iter5_empty_67_reg_574 <= ap_phi_reg_pp0_iter4_empty_67_reg_574;
                ap_phi_reg_pp0_iter5_flag_write_reg_525 <= ap_phi_reg_pp0_iter4_flag_write_reg_525;
                ap_phi_reg_pp0_iter5_p_0_0_066256_reg_563 <= ap_phi_reg_pp0_iter4_p_0_0_066256_reg_563;
                ap_phi_reg_pp0_iter5_read_pixel_reg_508 <= ap_phi_reg_pp0_iter4_read_pixel_reg_508;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter6_B0_reg_552 <= ap_phi_reg_pp0_iter5_B0_reg_552;
                ap_phi_reg_pp0_iter6_B1_reg_541 <= ap_phi_reg_pp0_iter5_B1_reg_541;
                ap_phi_reg_pp0_iter6_empty_67_reg_574 <= ap_phi_reg_pp0_iter5_empty_67_reg_574;
                ap_phi_reg_pp0_iter6_flag_write_reg_525 <= ap_phi_reg_pp0_iter5_flag_write_reg_525;
                ap_phi_reg_pp0_iter6_p_0_0_066256_reg_563 <= ap_phi_reg_pp0_iter5_p_0_0_066256_reg_563;
                ap_phi_reg_pp0_iter6_read_pixel_reg_508 <= ap_phi_reg_pp0_iter5_read_pixel_reg_508;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter7_B0_reg_552 <= ap_phi_reg_pp0_iter6_B0_reg_552;
                ap_phi_reg_pp0_iter7_B1_reg_541 <= ap_phi_reg_pp0_iter6_B1_reg_541;
                ap_phi_reg_pp0_iter7_empty_67_reg_574 <= ap_phi_reg_pp0_iter6_empty_67_reg_574;
                ap_phi_reg_pp0_iter7_flag_write_reg_525 <= ap_phi_reg_pp0_iter6_flag_write_reg_525;
                ap_phi_reg_pp0_iter7_p_0_0_066256_reg_563 <= ap_phi_reg_pp0_iter6_p_0_0_066256_reg_563;
                ap_phi_reg_pp0_iter7_read_pixel_reg_508 <= ap_phi_reg_pp0_iter6_read_pixel_reg_508;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter8_B0_reg_552 <= ap_phi_reg_pp0_iter7_B0_reg_552;
                ap_phi_reg_pp0_iter8_B1_reg_541 <= ap_phi_reg_pp0_iter7_B1_reg_541;
                ap_phi_reg_pp0_iter8_empty_67_reg_574 <= ap_phi_reg_pp0_iter7_empty_67_reg_574;
                ap_phi_reg_pp0_iter8_flag_write_reg_525 <= ap_phi_reg_pp0_iter7_flag_write_reg_525;
                ap_phi_reg_pp0_iter8_p_0_0_066256_reg_563 <= ap_phi_reg_pp0_iter7_p_0_0_066256_reg_563;
                ap_phi_reg_pp0_iter8_read_pixel_reg_508 <= ap_phi_reg_pp0_iter7_read_pixel_reg_508;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then
                ap_phi_reg_pp0_iter9_B0_reg_552 <= ap_phi_reg_pp0_iter8_B0_reg_552;
                ap_phi_reg_pp0_iter9_B1_reg_541 <= ap_phi_reg_pp0_iter8_B1_reg_541;
                ap_phi_reg_pp0_iter9_empty_67_reg_574 <= ap_phi_reg_pp0_iter8_empty_67_reg_574;
                ap_phi_reg_pp0_iter9_p_0_0_066256_reg_563 <= ap_phi_reg_pp0_iter8_p_0_0_066256_reg_563;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    A0_fu_975_p3 <= 
        ap_phi_reg_pp0_iter11_B0_reg_552 when (icmp_ln509_reg_1297_pp0_iter10_reg(0) = '1') else 
        ap_phi_reg_pp0_iter11_empty_67_reg_574;
    A1_fu_982_p3 <= 
        ap_phi_reg_pp0_iter11_B1_reg_541 when (icmp_ln509_reg_1297_pp0_iter10_reg(0) = '1') else 
        ap_phi_reg_pp0_iter11_p_0_0_066256_reg_563;
    P2_fu_1082_p0 <= P2_fu_1082_p00(12 - 1 downto 0);
    P2_fu_1082_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wy_reg_1421),21));
    P4_fu_1094_p3 <= (A0_reg_1432_pp0_iter14_reg & ap_const_lv10_0);
    Wxy_fu_1059_p4 <= conv10_i_i_i_fu_1053_p2(21 downto 10);
    add_ln266_fu_850_p2 <= std_logic_vector(unsigned(trunc_ln_fu_822_p4) + unsigned(ap_const_lv17_1));
    add_ln411_fu_655_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_1) + unsigned(ap_const_lv8_1));
    add_ln52_1_fu_1011_p2 <= std_logic_vector(unsigned(zext_ln52_3_fu_1007_p1) + unsigned(zext_ln52_2_fu_1003_p1));
    add_ln52_fu_997_p2 <= std_logic_vector(unsigned(zext_ln52_1_fu_993_p1) + unsigned(zext_ln52_fu_989_p1));
    add_ln61_2_fu_1108_p2 <= std_logic_vector(signed(sext_ln61_3_fu_1101_p1) + signed(zext_ln61_fu_1104_p1));
    add_ln61_3_fu_1141_p2 <= std_logic_vector(unsigned(trunc_ln1_reg_1482) + unsigned(ap_const_lv8_1));
    and_ln428_fu_783_p2 <= (xor_ln428_fu_777_p2 and icmp_ln430_reg_1292);
    and_ln508_fu_733_p2 <= (icmp_ln511_fu_721_p2 and icmp_ln510_fu_727_p2);
    and_ln509_fu_715_p2 <= (icmp_ln509_fu_709_p2 and cmp308);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter16, ap_block_state9_pp0_stage0_iter8, ap_block_state17_pp0_stage0_iter16)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage0_iter16)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage0_iter8)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter16, ap_block_state9_pp0_stage0_iter8, ap_block_state17_pp0_stage0_iter16)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage0_iter16)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage0_iter8)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp85_assign_proc : process(ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter16, ap_block_state9_pp0_stage0_iter8_ignore_call6, ap_block_state17_pp0_stage0_iter16_ignore_call6)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp85 <= (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage0_iter16_ignore_call6)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage0_iter8_ignore_call6)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter16, ap_block_state9_pp0_stage0_iter8, ap_block_state17_pp0_stage0_iter16)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state17_pp0_stage0_iter16)) or ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage0_iter8)));
    end process;


    ap_block_state17_pp0_stage0_iter16_assign_proc : process(out_resize_mat_data_full_n, ap_predicate_op240_write_state17)
    begin
                ap_block_state17_pp0_stage0_iter16 <= ((ap_predicate_op240_write_state17 = ap_const_boolean_1) and (out_resize_mat_data_full_n = ap_const_logic_0));
    end process;


    ap_block_state17_pp0_stage0_iter16_ignore_call6_assign_proc : process(out_resize_mat_data_full_n, ap_predicate_op240_write_state17)
    begin
                ap_block_state17_pp0_stage0_iter16_ignore_call6 <= ((ap_predicate_op240_write_state17 = ap_const_boolean_1) and (out_resize_mat_data_full_n = ap_const_logic_0));
    end process;


    ap_block_state9_pp0_stage0_iter8_assign_proc : process(in_mat_data_empty_n, ap_predicate_op117_read_state9)
    begin
                ap_block_state9_pp0_stage0_iter8 <= ((ap_predicate_op117_read_state9 = ap_const_boolean_1) and (in_mat_data_empty_n = ap_const_logic_0));
    end process;


    ap_block_state9_pp0_stage0_iter8_ignore_call6_assign_proc : process(in_mat_data_empty_n, ap_predicate_op117_read_state9)
    begin
                ap_block_state9_pp0_stage0_iter8_ignore_call6 <= ((ap_predicate_op117_read_state9 = ap_const_boolean_1) and (in_mat_data_empty_n = ap_const_logic_0));
    end process;


    ap_condition_710_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_710 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_714_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_714 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_755_assign_proc : process(icmp_ln411_reg_1278, cmp71, and_ln428_fu_783_p2)
    begin
                ap_condition_755 <= ((cmp71 = ap_const_lv1_1) and (icmp_ln411_reg_1278 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln428_fu_783_p2));
    end process;


    ap_condition_861_assign_proc : process(first_row_index_6_read_reg_1250, ap_phi_mux_flag_write_phi_fu_530_p6)
    begin
                ap_condition_861 <= (not((first_row_index_6_read_reg_1250 = ap_const_lv32_0)) and not((first_row_index_6_read_reg_1250 = ap_const_lv32_1)) and (ap_phi_mux_flag_write_phi_fu_530_p6 = ap_const_lv1_1));
    end process;


    ap_condition_91_assign_proc : process(icmp_ln411_reg_1278_pp0_iter7_reg, and_ln428_reg_1324_pp0_iter7_reg, cmp71)
    begin
                ap_condition_91 <= ((cmp71 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln428_reg_1324_pp0_iter7_reg) and (icmp_ln411_reg_1278_pp0_iter7_reg = ap_const_lv1_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln411_fu_649_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln411_fu_649_p2 = ap_const_lv1_0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter15_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter15_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16)
    begin
        if (((ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_phi_mux_flag_write_phi_fu_530_p6 <= ap_phi_reg_pp0_iter9_flag_write_reg_525;
    ap_phi_reg_pp0_iter0_B0_reg_552 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_B1_reg_541 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_67_reg_574 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_flag_write_reg_525 <= "X";
    ap_phi_reg_pp0_iter0_p_0_0_066256_reg_563 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_read_pixel_reg_508 <= "XXXXXXXX";

    ap_predicate_op117_read_state9_assign_proc : process(icmp_ln411_reg_1278_pp0_iter7_reg, and_ln428_reg_1324_pp0_iter7_reg, cmp71)
    begin
                ap_predicate_op117_read_state9 <= ((cmp71 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln428_reg_1324_pp0_iter7_reg) and (icmp_ln411_reg_1278_pp0_iter7_reg = ap_const_lv1_1));
    end process;


    ap_predicate_op240_write_state17_assign_proc : process(and_ln509_reg_1303_pp0_iter15_reg, icmp_ln511_reg_1307_pp0_iter15_reg, and_ln508_reg_1315_pp0_iter15_reg, slt)
    begin
                ap_predicate_op240_write_state17 <= (((ap_const_lv1_1 = and_ln508_reg_1315_pp0_iter15_reg) and (ap_const_lv1_0 = and_ln509_reg_1303_pp0_iter15_reg) and (slt = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln509_reg_1303_pp0_iter15_reg) and (icmp_ln511_reg_1307_pp0_iter15_reg = ap_const_lv1_1) and (slt = ap_const_lv1_0)));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, j_fu_180)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_1 <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_j_1 <= j_fu_180;
        end if; 
    end process;

    cmp308_read_reg_1263 <= cmp308;
    cmp71_read_read_fu_190_p2 <= cmp71;
    conv10_i_i_i_fu_1053_p0 <= conv10_i_i_i_fu_1053_p00(12 - 1 downto 0);
    conv10_i_i_i_fu_1053_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wx_reg_1355_pp0_iter11_reg),24));
    conv10_i_i_i_fu_1053_p1 <= conv10_i_i_i_fu_1053_p10(12 - 1 downto 0);
    conv10_i_i_i_fu_1053_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wy_reg_1421),24));
    empty_68_fu_919_p1 <= idx_2_reg_1339(7 - 1 downto 0);
    first_row_index_6_read_reg_1250 <= first_row_index_6;

    grp_fu_1168_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1168_ce <= ap_const_logic_1;
        else 
            grp_fu_1168_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1168_p0 <= grp_fu_1168_p00(12 - 1 downto 0);
    grp_fu_1168_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wx_reg_1355_pp0_iter10_reg),21));

    grp_fu_1177_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1177_ce <= ap_const_logic_1;
        else 
            grp_fu_1177_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1177_p0 <= grp_fu_1177_p00(12 - 1 downto 0);
    grp_fu_1177_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wxy_fu_1059_p4),22));
    grp_scaleCompute_17_42_20_48_16_1_s_fu_203_p_ce <= grp_scaleCompute_17_42_20_48_16_1_s_fu_585_ap_ce;
    grp_scaleCompute_17_42_20_48_16_1_s_fu_203_p_din1 <= zext_ln417_fu_752_p1;
    grp_scaleCompute_17_42_20_48_16_1_s_fu_203_p_din2 <= empty_28;

    grp_scaleCompute_17_42_20_48_16_1_s_fu_585_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp85)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp85) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_scaleCompute_17_42_20_48_16_1_s_fu_585_ap_ce <= ap_const_logic_1;
        else 
            grp_scaleCompute_17_42_20_48_16_1_s_fu_585_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln243_fu_667_p2 <= "0" when (empty_29 = sub_ln243_fu_661_p2) else "1";
    icmp_ln249_fu_673_p2 <= "0" when (indexy_pre_1 = ap_const_lv22_0) else "1";
    icmp_ln263_fu_797_p2 <= "1" when (signed(shl_i_i_i_i_i) < signed(zext_ln263_fu_793_p1)) else "0";
    icmp_ln266_fu_844_p2 <= "1" when (trunc_ln266_fu_840_p1 = ap_const_lv22_0) else "0";
    icmp_ln411_fu_649_p2 <= "1" when (signed(zext_ln411_1_fu_645_p1) < signed(loop_col_count)) else "0";
    icmp_ln428_fu_772_p2 <= "1" when (signed(zext_ln428_fu_768_p1) < signed(sub)) else "0";
    icmp_ln430_fu_699_p2 <= "1" when (signed(zext_ln411_1_fu_645_p1) < signed(imgInput_cols_val)) else "0";
    icmp_ln509_fu_709_p2 <= "1" when (sub = zext_ln509_fu_705_p1) else "0";
    icmp_ln510_fu_727_p2 <= "1" when (sub309 = zext_ln509_fu_705_p1) else "0";
    icmp_ln511_fu_721_p2 <= "1" when (signed(zext_ln411_1_fu_645_p1) < signed(imgOutput_cols_val)) else "0";
    icmp_ln61_fu_1128_p2 <= "1" when (trunc_ln61_fu_1124_p1 = ap_const_lv10_0) else "0";
    idx_2_fu_864_p3 <= 
        select_ln266_fu_856_p3 when (tmp_8_fu_832_p3(0) = '1') else 
        trunc_ln_fu_822_p4;
    idx_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_2_fu_864_p3),32));
    idx_nxt_fu_925_p2 <= std_logic_vector(unsigned(empty_68_fu_919_p1) + unsigned(zext_ln450_fu_922_p1));

    in_mat_data_blk_n_assign_proc : process(ap_enable_reg_pp0_iter8, in_mat_data_empty_n, ap_predicate_op117_read_state9, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op117_read_state9 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            in_mat_data_blk_n <= in_mat_data_empty_n;
        else 
            in_mat_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    in_mat_data_read_assign_proc : process(ap_enable_reg_pp0_iter8, ap_predicate_op117_read_state9, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op117_read_state9 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1))) then 
            in_mat_data_read <= ap_const_logic_1;
        else 
            in_mat_data_read <= ap_const_logic_0;
        end if; 
    end process;

    indexx_pre_2_fu_809_p3 <= 
        indexx_pre_1 when (icmp_ln263_reg_1334(0) = '1') else 
        indexx_pre_comp_reg_1328;
    indexx_pre_3_fu_814_p3 <= 
        ap_const_lv42_0 when (tmp_7_fu_802_p3(0) = '1') else 
        indexx_pre_2_fu_809_p3;
    indexy_1_out <= indexy_1_fu_176;

    indexy_1_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln411_reg_1278_pp0_iter14_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln411_reg_1278_pp0_iter14_reg = ap_const_lv1_0))) then 
            indexy_1_out_ap_vld <= ap_const_logic_1;
        else 
            indexy_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    indexy_2_fu_687_p3 <= 
        select_ln249_fu_679_p3 when (empty_32(0) = '1') else 
        tmp_cast;
    line_buffer_1_addr_1_gep_fu_450_p3 <= zext_ln453_fu_940_p1(7 - 1 downto 0);
    line_buffer_1_addr_gep_fu_431_p3 <= zext_ln452_fu_931_p1(7 - 1 downto 0);

    line_buffer_1_address0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, line_buffer_1_addr_1_gep_fu_450_p3, zext_ln453_fu_940_p1, zext_ln411_fu_913_p1, ap_predicate_pred914_state10, ap_predicate_pred926_state10, ap_condition_861)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_861)) then 
                line_buffer_1_address0 <= zext_ln411_fu_913_p1(7 - 1 downto 0);
            elsif ((ap_predicate_pred926_state10 = ap_const_boolean_1)) then 
                line_buffer_1_address0 <= line_buffer_1_addr_1_gep_fu_450_p3;
            elsif ((ap_predicate_pred914_state10 = ap_const_boolean_1)) then 
                line_buffer_1_address0 <= zext_ln453_fu_940_p1(7 - 1 downto 0);
            else 
                line_buffer_1_address0 <= "XXXXXXX";
            end if;
        else 
            line_buffer_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    line_buffer_1_address1_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, line_buffer_1_addr_gep_fu_431_p3, zext_ln452_fu_931_p1, ap_predicate_pred914_state10, ap_predicate_pred926_state10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
            if ((ap_predicate_pred926_state10 = ap_const_boolean_1)) then 
                line_buffer_1_address1 <= line_buffer_1_addr_gep_fu_431_p3;
            elsif ((ap_predicate_pred914_state10 = ap_const_boolean_1)) then 
                line_buffer_1_address1 <= zext_ln452_fu_931_p1(7 - 1 downto 0);
            else 
                line_buffer_1_address1 <= "XXXXXXX";
            end if;
        else 
            line_buffer_1_address1 <= "XXXXXXX";
        end if; 
    end process;


    line_buffer_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, first_row_index_6_read_reg_1250, ap_phi_mux_flag_write_phi_fu_530_p6, ap_predicate_pred914_state10, ap_predicate_pred926_state10)
    begin
        if (((not((first_row_index_6_read_reg_1250 = ap_const_lv32_0)) and not((first_row_index_6_read_reg_1250 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_530_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred926_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred914_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)))) then 
            line_buffer_1_ce0 <= ap_const_logic_1;
        else 
            line_buffer_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_ce1_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, ap_predicate_pred914_state10, ap_predicate_pred926_state10)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred926_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred914_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)))) then 
            line_buffer_1_ce1 <= ap_const_logic_1;
        else 
            line_buffer_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_1_d0 <= ap_phi_reg_pp0_iter9_read_pixel_reg_508;

    line_buffer_1_we0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, first_row_index_6_read_reg_1250, ap_phi_mux_flag_write_phi_fu_530_p6)
    begin
        if ((not((first_row_index_6_read_reg_1250 = ap_const_lv32_0)) and not((first_row_index_6_read_reg_1250 = ap_const_lv32_1)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_530_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            line_buffer_1_we0 <= ap_const_logic_1;
        else 
            line_buffer_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_2_addr_1_gep_fu_490_p3 <= zext_ln453_fu_940_p1(7 - 1 downto 0);
    line_buffer_2_addr_gep_fu_475_p3 <= zext_ln452_fu_931_p1(7 - 1 downto 0);

    line_buffer_2_address0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, first_row_index_6_read_reg_1250, line_buffer_2_addr_1_gep_fu_490_p3, ap_phi_mux_flag_write_phi_fu_530_p6, zext_ln453_fu_940_p1, zext_ln411_fu_913_p1, ap_predicate_pred939_state10, ap_predicate_pred949_state10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
            if ((ap_predicate_pred949_state10 = ap_const_boolean_1)) then 
                line_buffer_2_address0 <= line_buffer_2_addr_1_gep_fu_490_p3;
            elsif (((ap_phi_mux_flag_write_phi_fu_530_p6 = ap_const_lv1_1) and (first_row_index_6_read_reg_1250 = ap_const_lv32_0))) then 
                line_buffer_2_address0 <= zext_ln411_fu_913_p1(7 - 1 downto 0);
            elsif ((ap_predicate_pred939_state10 = ap_const_boolean_1)) then 
                line_buffer_2_address0 <= zext_ln453_fu_940_p1(7 - 1 downto 0);
            else 
                line_buffer_2_address0 <= "XXXXXXX";
            end if;
        else 
            line_buffer_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    line_buffer_2_address1_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, line_buffer_2_addr_gep_fu_475_p3, zext_ln452_fu_931_p1, ap_predicate_pred939_state10, ap_predicate_pred949_state10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
            if ((ap_predicate_pred949_state10 = ap_const_boolean_1)) then 
                line_buffer_2_address1 <= line_buffer_2_addr_gep_fu_475_p3;
            elsif ((ap_predicate_pred939_state10 = ap_const_boolean_1)) then 
                line_buffer_2_address1 <= zext_ln452_fu_931_p1(7 - 1 downto 0);
            else 
                line_buffer_2_address1 <= "XXXXXXX";
            end if;
        else 
            line_buffer_2_address1 <= "XXXXXXX";
        end if; 
    end process;


    line_buffer_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, first_row_index_6_read_reg_1250, ap_phi_mux_flag_write_phi_fu_530_p6, ap_predicate_pred939_state10, ap_predicate_pred949_state10)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred949_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred939_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_530_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (first_row_index_6_read_reg_1250 = ap_const_lv32_0)))) then 
            line_buffer_2_ce0 <= ap_const_logic_1;
        else 
            line_buffer_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_ce1_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, ap_predicate_pred939_state10, ap_predicate_pred949_state10)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred949_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred939_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)))) then 
            line_buffer_2_ce1 <= ap_const_logic_1;
        else 
            line_buffer_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_2_d0 <= ap_phi_reg_pp0_iter9_read_pixel_reg_508;

    line_buffer_2_we0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, first_row_index_6_read_reg_1250, ap_phi_mux_flag_write_phi_fu_530_p6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_530_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (first_row_index_6_read_reg_1250 = ap_const_lv32_0))) then 
            line_buffer_2_we0 <= ap_const_logic_1;
        else 
            line_buffer_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_addr_1_gep_fu_483_p3 <= zext_ln453_fu_940_p1(7 - 1 downto 0);
    line_buffer_addr_gep_fu_468_p3 <= zext_ln452_fu_931_p1(7 - 1 downto 0);

    line_buffer_address0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, first_row_index_6_read_reg_1250, line_buffer_addr_1_gep_fu_483_p3, ap_phi_mux_flag_write_phi_fu_530_p6, zext_ln453_fu_940_p1, zext_ln411_fu_913_p1, ap_predicate_pred959_state10, ap_predicate_pred970_state10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
            if ((ap_predicate_pred970_state10 = ap_const_boolean_1)) then 
                line_buffer_address0 <= line_buffer_addr_1_gep_fu_483_p3;
            elsif ((ap_predicate_pred959_state10 = ap_const_boolean_1)) then 
                line_buffer_address0 <= zext_ln453_fu_940_p1(7 - 1 downto 0);
            elsif (((ap_phi_mux_flag_write_phi_fu_530_p6 = ap_const_lv1_1) and (first_row_index_6_read_reg_1250 = ap_const_lv32_1))) then 
                line_buffer_address0 <= zext_ln411_fu_913_p1(7 - 1 downto 0);
            else 
                line_buffer_address0 <= "XXXXXXX";
            end if;
        else 
            line_buffer_address0 <= "XXXXXXX";
        end if; 
    end process;


    line_buffer_address1_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0, line_buffer_addr_gep_fu_468_p3, zext_ln452_fu_931_p1, ap_predicate_pred959_state10, ap_predicate_pred970_state10)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then
            if ((ap_predicate_pred970_state10 = ap_const_boolean_1)) then 
                line_buffer_address1 <= line_buffer_addr_gep_fu_468_p3;
            elsif ((ap_predicate_pred959_state10 = ap_const_boolean_1)) then 
                line_buffer_address1 <= zext_ln452_fu_931_p1(7 - 1 downto 0);
            else 
                line_buffer_address1 <= "XXXXXXX";
            end if;
        else 
            line_buffer_address1 <= "XXXXXXX";
        end if; 
    end process;


    line_buffer_ce0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, first_row_index_6_read_reg_1250, ap_phi_mux_flag_write_phi_fu_530_p6, ap_predicate_pred959_state10, ap_predicate_pred970_state10)
    begin
        if ((((ap_predicate_pred970_state10 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred959_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_530_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (first_row_index_6_read_reg_1250 = ap_const_lv32_1)))) then 
            line_buffer_ce0 <= ap_const_logic_1;
        else 
            line_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_ce1_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, ap_predicate_pred959_state10, ap_predicate_pred970_state10)
    begin
        if ((((ap_predicate_pred970_state10 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred959_state10 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)))) then 
            line_buffer_ce1 <= ap_const_logic_1;
        else 
            line_buffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_d0 <= ap_phi_reg_pp0_iter9_read_pixel_reg_508;

    line_buffer_we0_assign_proc : process(ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_11001, first_row_index_6_read_reg_1250, ap_phi_mux_flag_write_phi_fu_530_p6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_phi_mux_flag_write_phi_fu_530_p6 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (first_row_index_6_read_reg_1250 = ap_const_lv32_1))) then 
            line_buffer_we0 <= ap_const_logic_1;
        else 
            line_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    nextYScale_1_out <= nextYScale_1_fu_172;

    nextYScale_1_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln411_reg_1278_pp0_iter14_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln411_reg_1278_pp0_iter14_reg = ap_const_lv1_0))) then 
            nextYScale_1_out_ap_vld <= ap_const_logic_1;
        else 
            nextYScale_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    nextYScale_2_fu_762_p3 <= 
        select_ln243_fu_757_p3 when (empty_31(0) = '1') else 
        tmp_cast_30;
    not_cmp_i_i176_fu_898_p2 <= "0" when (sub97 = idx_fu_894_p1) else "1";

    out_resize_mat_data_blk_n_assign_proc : process(ap_enable_reg_pp0_iter16, out_resize_mat_data_full_n, ap_predicate_op240_write_state17, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_predicate_op240_write_state17 = ap_const_boolean_1))) then 
            out_resize_mat_data_blk_n <= out_resize_mat_data_full_n;
        else 
            out_resize_mat_data_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_resize_mat_data_din <= 
        select_ln61_fu_1146_p3 when (tmp_9_fu_1134_p3(0) = '1') else 
        trunc_ln1_reg_1482;

    out_resize_mat_data_write_assign_proc : process(ap_enable_reg_pp0_iter16, ap_predicate_op240_write_state17, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_predicate_op240_write_state17 = ap_const_boolean_1))) then 
            out_resize_mat_data_write <= ap_const_logic_1;
        else 
            out_resize_mat_data_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln243_fu_757_p3 <= 
        add_i_i_i_i_i475_i when (icmp_ln243_reg_1282(0) = '1') else 
        tmp_cast_30;
    select_ln249_fu_679_p3 <= 
        add_i_i_i_i_i349_i when (icmp_ln249_fu_673_p2(0) = '1') else 
        tmp_cast;
    select_ln266_fu_856_p3 <= 
        trunc_ln_fu_822_p4 when (icmp_ln266_fu_844_p2(0) = '1') else 
        add_ln266_fu_850_p2;
    select_ln61_fu_1146_p3 <= 
        trunc_ln1_reg_1482 when (icmp_ln61_reg_1489(0) = '1') else 
        add_ln61_3_fu_1141_p2;
        sext_ln61_3_fu_1101_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1177_p3),24));

    shl_ln1_fu_876_p3 <= (trunc_ln268_fu_872_p1 & ap_const_lv22_0);
    shl_ln_fu_950_p3 <= (trunc_ln251_reg_1287_pp0_iter10_reg & ap_const_lv22_0);
    slt_read_read_fu_286_p2 <= slt;
    sub_ln243_fu_661_p2 <= std_logic_vector(unsigned(ap_const_lv22_0) - unsigned(shr_i_i_i_i102_cast));
    sub_ln250_fu_957_p2 <= std_logic_vector(unsigned(empty) - unsigned(shl_ln_fu_950_p3));
    sub_ln267_fu_888_p2 <= std_logic_vector(unsigned(trunc_ln267_fu_884_p1) - unsigned(shl_ln1_fu_876_p3));
    sub_ln53_fu_1031_p2 <= std_logic_vector(unsigned(zext_ln52_2_fu_1003_p1) - unsigned(zext_ln52_fu_989_p1));
    sub_ln54_fu_1037_p2 <= std_logic_vector(unsigned(zext_ln52_3_fu_1007_p1) - unsigned(zext_ln52_fu_989_p1));
    tmp_3_read_fu_214_p2 <= empty_32;
    tmp_4_read_fu_238_p2 <= empty_31;
    tmp_7_fu_802_p3 <= indexx_pre_comp_reg_1328(41 downto 41);
    tmp_8_fu_832_p3 <= indexx_pre_3_fu_814_p3(41 downto 41);
    tmp_9_fu_1134_p3 <= add_ln61_2_reg_1477(23 downto 23);
    trunc_ln251_fu_695_p1 <= indexy_2_fu_687_p3(2 - 1 downto 0);
    trunc_ln266_fu_840_p1 <= indexx_pre_3_fu_814_p3(22 - 1 downto 0);
    trunc_ln267_fu_884_p1 <= indexx_pre_3_fu_814_p3(24 - 1 downto 0);
    trunc_ln268_fu_872_p1 <= idx_2_fu_864_p3(2 - 1 downto 0);
    trunc_ln417_fu_749_p1 <= j_1_reg_1272(7 - 1 downto 0);
    trunc_ln61_fu_1124_p1 <= add_ln61_2_fu_1108_p2(10 - 1 downto 0);
    trunc_ln_fu_822_p4 <= indexx_pre_3_fu_814_p3(38 downto 22);
    val0_fu_1025_p2 <= std_logic_vector(unsigned(zext_ln52_4_fu_1017_p1) - unsigned(zext_ln52_5_fu_1021_p1));
    xor_ln428_fu_777_p2 <= (icmp_ln428_fu_772_p2 xor ap_const_lv1_1);
    zext_ln263_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_scaleCompute_17_42_20_48_16_1_s_fu_203_p_dout0),54));
    zext_ln411_1_fu_645_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_j_1),32));
    zext_ln411_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_reg_1272_pp0_iter8_reg),64));
    zext_ln417_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln417_fu_749_p1),32));
    zext_ln428_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nextYScale_2_fu_762_p3),32));
    zext_ln450_fu_922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(not_cmp_i_i176_reg_1350),7));
    zext_ln452_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_2_reg_1339),64));
    zext_ln453_fu_940_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(idx_nxt_fu_925_p2),64));
    zext_ln509_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indexy_2_fu_687_p3),32));
    zext_ln52_1_fu_993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp0_iter11_B1_reg_541),9));
    zext_ln52_2_fu_1003_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp0_iter11_B0_reg_552),9));
    zext_ln52_3_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A1_fu_982_p3),9));
    zext_ln52_4_fu_1017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln52_fu_997_p2),10));
    zext_ln52_5_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln52_1_fu_1011_p2),10));
    zext_ln52_fu_989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A0_fu_975_p3),9));
    zext_ln61_fu_1104_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(P4_fu_1094_p3),24));
end behav;
