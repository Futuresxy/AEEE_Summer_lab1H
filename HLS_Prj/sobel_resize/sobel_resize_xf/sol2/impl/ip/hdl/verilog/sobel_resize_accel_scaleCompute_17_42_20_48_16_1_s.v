// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sobel_resize_accel_scaleCompute_17_42_20_48_16_1_s (
        ap_clk,
        ap_rst,
        currindex,
        inscale,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [31:0] currindex;
input  [47:0] inscale;
output  [41:0] ap_return;
input   ap_ce;

reg[41:0] ap_return;

wire    ap_block_pp0_stage0_11001;
wire   [73:0] grp_fu_34_p2;
reg   [73:0] mul_ln199_reg_91;
wire   [47:0] grp_fu_34_p0;
wire    ap_block_pp0_stage0;
wire   [19:0] trunc_ln198_fu_38_p1;
wire   [41:0] shl_ln_fu_42_p3;
wire  signed [41:0] or_ln198_fu_50_p2;
wire   [73:0] add_ln200_fu_66_p2;
reg    grp_fu_34_ce;
reg    ap_ce_reg;
reg   [31:0] currindex_int_reg;
reg   [47:0] inscale_int_reg;
reg   [41:0] ap_return_int_reg;
wire   [73:0] grp_fu_34_p00;

sobel_resize_accel_mul_48ns_42s_74_5_0 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 48 ),
    .din1_WIDTH( 42 ),
    .dout_WIDTH( 74 ))
mul_48ns_42s_74_5_0_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_34_p0),
    .din1(or_ln198_fu_50_p2),
    .ce(grp_fu_34_ce),
    .dout(grp_fu_34_p2)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= {{add_ln200_fu_66_p2[73:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        currindex_int_reg <= currindex;
        inscale_int_reg <= inscale;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln199_reg_91 <= grp_fu_34_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = {{add_ln200_fu_66_p2[73:32]}};
    end else begin
        ap_return = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_34_ce = 1'b1;
    end else begin
        grp_fu_34_ce = 1'b0;
    end
end

assign add_ln200_fu_66_p2 = ($signed(mul_ln199_reg_91) + $signed(74'd18889456924279326113792));

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign grp_fu_34_p0 = grp_fu_34_p00;

assign grp_fu_34_p00 = inscale_int_reg;

assign or_ln198_fu_50_p2 = (shl_ln_fu_42_p3 | 42'd2097152);

assign shl_ln_fu_42_p3 = {{trunc_ln198_fu_38_p1}, {22'd0}};

assign trunc_ln198_fu_38_p1 = currindex_int_reg[19:0];

endmodule //sobel_resize_accel_scaleCompute_17_42_20_48_16_1_s
